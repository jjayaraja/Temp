1. Export Navigation to CSV
powershell
# Export Navigation Nodes to CSV
$exportPath = ".\TopNavigationExport.csv"

Connect-PnPOnline -Url $sourceSite -Interactive

# Get all top navigation nodes with hierarchy
$navigationNodes = Get-PnPNavigationNode -Location TopNavigationBar -Tree

$navCollection = @()
$order = 1

function Process-Node {
    param(
        $node,
        $parentTitle,
        $level
    )
    
    $navItem = [PSCustomObject]@{
        Title        = $node.Title
        Url          = $node.Url
        ParentTitle  = $parentTitle
        Level        = "Level $level"
        Order        = $order
    }
    
    $script:navCollection += $navItem
    $script:order++
    
    foreach($child in $node.Children) {
        Process-Node -node $child -parentTitle $node.Title -level ($level+1)
    }
}

foreach($node in $navigationNodes) {
    Process-Node -node $node -parentTitle "" -level 1
}

$navCollection | Export-Csv -Path $exportPath -NoTypeInformation






  
2. Import Navigation from CSV
powershell
# Import Navigation Nodes from CSV
Connect-PnPOnline -Url "https://contoso.sharepoint.com/sites/targethub" -Interactive

$ImportedNav = Import-Csv -Path "NavigationExport.csv"

# Import nodes in correct order (parents first)
foreach ($NavNode in $ImportedNav) {
    $ParentNode = $null
    
    # Find parent node if specified
    if (-not [string]::IsNullOrEmpty($NavNode.ParentNodeTitle)) {
        $ParentNode = Get-PnPNavigationNode -Location $NavNode.NavigationType | Where-Object { $_.Title -eq $NavNode.ParentNodeTitle }
        if (-not $ParentNode) {
            Write-Warning "Parent node '$($NavNode.ParentNodeTitle)' not found. Skipping child node '$($NavNode.Title)'."
            continue
        }
    }

    # Create new navigation node
    $NewNodeParams = @{
        Location  = $NavNode.NavigationType
        Title     = $NavNode.Title
        Url       = $NavNode.Url
        IsExternal= [System.Convert]::ToBoolean($NavNode.IsExternal)
    }

    if ($ParentNode) {
        $NewNodeParams.Add("Parent", $ParentNode.Id)
    }

    Add-PnPNavigationNode @NewNodeParams -ErrorAction Stop
    Write-Host "Imported node: $($NavNode.Title)"
}

Write-Host "Navigation import completed!"



  <#
Steps to Use:
Export Navigation:

Run the first script after replacing the source hub URL.

Authenticate interactively.

A NavigationExport.csv file will be generated.

Import Navigation:

Run the second script after replacing the target hub URL.

Ensure the CSV file is in the same directory.

The script recreates the navigation structure with parent-child relationships.

Notes:
Order Matters: The CSV must list parent nodes before their children.

URL Adjustments: Update URLs in the CSV if the target site has a different base URL.

Permissions: Requires Site Owner permissions on both sites.

PnP Modules: Install with Install-Module -Name PnP.PowerShell. #>
