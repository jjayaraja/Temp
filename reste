# Simple SharePoint Permission Reset - Basic approach
# Parameters
$SiteUrl = "https://yourtenant.sharepoint.com/sites/yoursite"
$LibraryName = "Documents"

# Connect
Connect-PnPOnline -Url $SiteUrl -Interactive
Write-Host "Connected to SharePoint" -ForegroundColor Green

try {
    Write-Host "Getting all items from library..." -ForegroundColor Cyan
    
    # Get all items in smaller batches
    $allItems = Get-PnPListItem -List $LibraryName -PageSize 1000
    
    Write-Host "Found $($allItems.Count) total items" -ForegroundColor White
    
    # Filter items with unique permissions
    $itemsToReset = @()
    foreach ($item in $allItems) {
        if ($item.HasUniqueRoleAssignments) {
            $itemsToReset += $item
        }
    }
    
    Write-Host "Found $($itemsToReset.Count) items with unique permissions" -ForegroundColor Yellow
    
    if ($itemsToReset.Count -eq 0) {
        Write-Host "No items need permission reset!" -ForegroundColor Green
    }
    else {
        $resetCount = 0
        
        foreach ($item in $itemsToReset) {
            try {
                $resetCount++
                Write-Host "[$resetCount/$($itemsToReset.Count)] Resetting item ID: $($item.Id)" -ForegroundColor Blue
                
                # Reset permissions
                $item.ResetRoleInheritance()
                $item.Context.ExecuteQuery()
                
                Write-Host "✓ Success" -ForegroundColor Green
                
                # Small delay
                Start-Sleep -Milliseconds 300
            }
            catch {
                Write-Host "✗ Failed: $($_.Exception.Message)" -ForegroundColor Red
            }
        }
        
        Write-Host "`nCompleted! $resetCount items processed" -ForegroundColor Magenta
    }
}
catch {
    Write-Error "Error: $($_.Exception.Message)"
}
finally {
    Disconnect-PnPOnline
}
