$library = "AE"
$groupRead = "A-Z Viewers"            # Group A
$groupContribute = "Subfolder Contributors"  # Group B
$rootFolderName = "A"

# 1. Break inheritance on folder A and assign Read to Group A
$rootItem = Get-PnPListItem -List $library | Where-Object { $_["FileLeafRef"] -eq $rootFolderName }
if ($rootItem) {
    Write-Host "Breaking inheritance on folder A..."
    Set-PnPListItemPermission -List $library -Identity $rootItem.Id -InheritPermissions:$false
    Set-PnPListItemPermission -List $library -Identity $rootItem.Id -Group $groupRead -AddRole "Read"
}

# 2. Get all immediate children of A
$folderUrl = $rootItem["FileRef"] -replace "^/sites/[^/]+/", ""
$children = Get-PnPFolderItem -FolderSiteRelativeUrl $folderUrl

foreach ($child in $children) {
    Write-Host "`nProcessing '$($child.Name)' [$($child.ItemType)]"

    try {
        # Get list item ID (folder or file)
        $childFolder = Get-PnPFolder -Url $child.ServerRelativeUrl -Includes ListItemAllFields
        $listItemId = $childFolder.ListItemAllFields.Id

        # Break and assign Contribute
        Set-PnPListItemPermission -List $library -Identity $listItemId -InheritPermissions:$false
        Set-PnPListItemPermission -List $library -Identity $listItemId -Group $groupContribute -AddRole "Contribute"

        # 3. Reset all child items of this folder to re-inherit
        if ($child.ItemType -eq "Folder") {
            $childFolderUrl = $child.ServerRelativeUrl.TrimStart('/')
            $descendants = Get-PnPFolderItem -FolderSiteRelativeUrl $childFolderUrl -Recursive

            foreach ($desc in $descendants) {
                try {
                    $descFolder = Get-PnPFolder -Url $desc.ServerRelativeUrl -Includes ListItemAllFields
                    $descId = $descFolder.ListItemAllFields.Id

                    if ($descId) {
                        Write-Host " - Resetting inheritance for: $($desc.ServerRelativeUrl)"
                        Set-PnPListItemPermission -List $library -Identity $descId -InheritPermissions:$true
                    }
                } catch {
                    Write-Warning "   Failed to reset inheritance on $($desc.ServerRelativeUrl): $_"
                }
            }
        }

    } catch {
        Write-Warning "Failed to process '$($child.Name)': $_"
    }
}
