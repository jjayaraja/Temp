$library = "Documents"
$groupRead = "A-Z Viewers"
$groupContribute = "Subfolder Contributors"

function Set-PermissionsRecursively {
    param (
        [string]$folderUrl
    )

    $items = Get-PnPFolderItem -FolderSiteRelativeUrl $folderUrl -ItemType Folder

foreach ($item in $items) {
    Write-Host " > Subfolder '$($item.Name)'"

    try {
        # Explicitly include ListItemAllFields
        $folderObj = Get-PnPFolder -Url $item.ServerRelativeUrl -Includes ListItemAllFields
        $listItemId = $folderObj.ListItemAllFields.Id

        if ($null -eq $listItemId) {
            Write-Warning "   ListItemAllFields.Id is null for '$($item.ServerRelativeUrl)'"
            continue
        }

        # Set permissions
        Set-PnPListItemPermission -List $library -Identity $listItemId -InheritPermissions:$false
        Set-PnPListItemPermission -List $library -Identity $listItemId -Group $groupContribute -AddRole "Contribute"
    }
    catch {
        Write-Warning "   Failed to get or set permissions for '$($item.ServerRelativeUrl)': $_"
    }

    # Recurse into child folders
    Set-PermissionsRecursively -folderUrl $item.ServerRelativeUrl.Substring(1)
}


}


# Get all Aâ€“Z top folders in the library
$folders = Get-PnPListItem -List $library -PageSize 1000 | Where-Object {
    $_.FileSystemObjectType -eq "Folder" -and $_["FileLeafRef"] -match '^[A-Z]$'
}

foreach ($folder in $folders) {
    $name = $folder["FileLeafRef"]
    Write-Host "`nProcessing top-level folder '$name'..."

    # Break inheritance and assign Read to Group A
    Set-PnPListItemPermission -List $library -Identity $folder.Id -InheritPermissions:$false
    Set-PnPListItemPermission -List $library -Identity $folder.Id -Group $groupRead -AddRole "Read"

    # Get full folder path and convert to site-relative
    $folderUrl = $folder["FileRef"] -replace "^/sites/[^/]+/", ""

    # Recursively apply permissions to subfolders
    Set-PermissionsRecursively -folderUrl $folderUrl
}
