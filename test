$library = "Documents"
$groupRead = "A-Z Viewers"
$groupContribute = "Subfolder Contributors"

# Helper to recursively set permission on subfolders
function Set-PermissionsRecursively {
    param (
        [string]$folderUrl
    )

    $items = Get-PnPFolderItem -FolderSiteRelativeUrl $folderUrl -ItemType Folder

    foreach ($item in $items) {
        Write-Host " > Subfolder '$($item.Name)'"

        # Break inheritance and assign Contribute
        Set-PnPFolderPermission -Folder $item.ServerRelativeUrl -InheritPermissions:$false
        Set-PnPFolderPermission -Folder $item.ServerRelativeUrl -Group $groupContribute -AddRole "Contribute"

        # Recurse into child folders
        Set-PermissionsRecursively -folderUrl $item.ServerRelativeUrl.Substring(1)  # Convert server-relative to site-relative
    }
}

# Get all Aâ€“Z top folders in the library
$folders = Get-PnPListItem -List $library -PageSize 1000 | Where-Object {
    $_.FileSystemObjectType -eq "Folder" -and $_["FileLeafRef"] -match '^[A-Z]$'
}

foreach ($folder in $folders) {
    $name = $folder["FileLeafRef"]
    Write-Host "`nProcessing top-level folder '$name'..."

    # Break inheritance and assign Read to Group A
    Set-PnPListItemPermission -List $library -Identity $folder.Id -InheritPermissions:$false
    Set-PnPListItemPermission -List $library -Identity $folder.Id -Group $groupRead -AddRole "Read"

    # Get full folder path and convert to site-relative
    $folderUrl = $folder["FileRef"] -replace "^/sites/[^/]+/", ""

    # Recursively apply permissions to subfolders
    Set-PermissionsRecursively -folderUrl $folderUrl
}
