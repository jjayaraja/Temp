# Confluence to SharePoint Modern Pages Migration Script
# Based on PnP Script Sample: https://pnp.github.io/script-samples/spo-create-modern-pages-add-web-parts/

# Configuration Parameters
$siteUrl = "https://contoso.sharepoint.com/sites/yoursite"
$zipFilePath = "C:\ConfluenceExport.zip"
$tempFolder = "C:\ConfluenceExport"
$imagesLibrary = "SiteAssets/ConfluenceImages"
$stylesLibrary = "SiteAssets/ConfluenceStyles"
$pageLibrary = "SitePages"

# Connect to SharePoint
Connect-PnPOnline -Url $siteUrl -Interactive

# Extract ZIP Archive
Expand-Archive -Path $zipFilePath -DestinationPath $tempFolder -Force

# Upload Assets
function Upload-Assets {
    param($folderType)
    $localPath = Join-Path $tempFolder $folderType
    $targetLibrary = if ($folderType -eq "images") { $imagesLibrary } else { $stylesLibrary }
    
    Get-ChildItem $localPath -File -Recurse | ForEach-Object {
        $targetPath = $_.FullName.Replace($localPath, $targetLibrary)
        Add-PnPFile -Path $_.FullName -Folder $targetPath
    }
}

Upload-Assets "images"
Upload-Assets "styles"

# Process HTML Files
$htmlFiles = Get-ChildItem -Path $tempFolder -Filter *.html -Recurse

foreach ($htmlFile in $htmlFiles) {
    $pageName = [System.IO.Path]::GetFileNameWithoutExtension($htmlFile.Name)
    $pageName = $pageName -replace '[^\w\s-]','' -replace '\s+',' ' -replace '-+','-' -trim
    
    try {
        # Cleanup existing page
        $existingPage = Get-PnPClientSidePage -Identity $pageName -ErrorAction SilentlyContinue
        if ($existingPage) {
            Remove-PnPClientSidePage -Identity $pageName -Force
        }

        # Create new modern page
        $page = Add-PnPClientSidePage -Name $pageName -LayoutType Article -Title $pageName
        
        # Add default section
        $section = Add-PnPPageSection -Page $page -SectionTemplate OneColumn -Order 1
        
        # Process HTML content
        $htmlContent = Get-Content $htmlFile.FullName -Raw
        
        # Update resource paths
        $htmlContent = $htmlContent -replace 'src="images/', "src=""$siteUrl/$imagesLibrary/"
        $htmlContent = $htmlContent -replace 'href="styles/', "href=""$siteUrl/$stylesLibrary/"
        
        # Add HTML content as text web part
        $textWebPart = Add-PnPPageWebPart -Page $page -Component "Text" -Section 1 -Column 1
        Set-PnPClientSideText -Page $page -Text $htmlContent -InstanceId $textWebPart.InstanceId
        
        # Add default header image if needed
        # Set-PnPClientSidePageHeader -Page $page -Type Image -ImageUrl "/sites/yoursite/SiteAssets/header.jpg"
        
        # Save and publish
        $page.Save()
        $page.Publish()
        
        Write-Host "Created page: $pageName" -ForegroundColor Green
    }
    catch {
        Write-Warning "Error processing $pageName : $_"
    }
}

# Create Navigation
$pages = Get-PnPListItem -List $pageLibrary -Fields "FileLeafRef","Title"
$navigationNodes = $pages | ForEach-Object {
    @{
        Title = $_.FieldValues.Title
        Url   = "SitePages/$($_.FieldValues.FileLeafRef)"
    }
}

# Clear existing navigation
Get-PnPNavigationNode -Location QuickLaunch | Remove-PnPNavigationNode -Force

# Add new navigation
$navigationNodes | ForEach-Object {
    Add-PnPNavigationNode -Title $_.Title -Url $_.Url -Location QuickLaunch
}

# Cleanup
Remove-Item -Path $tempFolder -Recurse -Force
