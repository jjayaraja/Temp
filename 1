# ==============================
# Confluence to SharePoint Migrator
# Author: CODGrid + ChatGPT
# Version: 1.0 (Modular, Grid Index)
# ==============================

# --- CONFIGURATION ---
$SiteUrl = "https://abc.com/sites/abc"
$ExportPath = "C:\ConfluenceExport"
$IndexPageName = "All-Confluence-Pages"

# --- GLOBALS ---
$AllMigratedPages = @()

# --- FUNCTION: Connect to SharePoint ---
function Connect-ToSharePoint {
    try {
        Connect-PnPOnline -Url $SiteUrl -Interactive -ErrorAction Stop
        Write-Host "Connected to $SiteUrl" -ForegroundColor Green
    } catch {
        Write-Error "Connection failed: $_"
        exit 1
    }
}

# --- FUNCTION: Upload folders to SiteAssets ---
function Upload-FolderToSiteAssets {
    param([string]$LocalFolder)
    if (!(Test-Path $LocalFolder)) { return }
    $folderName = Split-Path $LocalFolder -Leaf
    $web = Get-PnPWeb
    $target = "$($web.ServerRelativeUrl.TrimEnd('/'))/SiteAssets/$folderName"
    Copy-PnPFolder -LocalPath $LocalFolder -TargetUrl $target -Recurse -Force
    Write-Host "Uploaded: $folderName to SiteAssets"
}

# --- FUNCTION: Clean Page Name ---
function Clean-PageName {
    param([string]$RawName)
    $base = [System.IO.Path]::GetFileNameWithoutExtension($RawName)
    $clean = $base -replace '[_-][0-9A-Za-z]+$','' -replace '[^A-Za-z0-9\s_-]', ''
    $safe = $clean.Trim().Replace(' ', '-')
    return @{ Title = $clean; FileName = $safe }
}
# --- FUNCTION: Rewrite links in HTML ---
function Rewrite-LinksInHtml {
    param([string]$Html)
    $web = Get-PnPWeb
    $base = $web.Url.TrimEnd('/') + "/SiteAssets"
    $Html = $Html -replace 'src=\"images/', ("src=\"" + $base + "/images/")
    $Html = $Html -replace 'href=\"attachments/', ("href=\"" + $base + "/attachments/")
    $Html = $Html -replace 'href=\"styles/', ("href=\"" + $base + "/styles/")
    return $Html
}

# --- FUNCTION: Create or Update Modern Page ---
function CreateOrUpdate-ModernPage {
    param(
        [string]$PageName,
        [string]$PageTitle,
        [string]$HtmlContent
    )
    try {
        $exists = Get-PnPPage -Identity $PageName -ErrorAction SilentlyContinue
        if ($exists) { Remove-PnPPage -Identity $PageName -Force }
        Add-PnPPage -Name $PageName -Title $PageTitle -LayoutType Article
        Add-PnPPageSection -Page $PageName -SectionTemplate OneColumn -Order 1 | Out-Null
        Add-PnPPageTextPart -Page $PageName -Section 1 -Column 1 -Text $HtmlContent | Out-Null
        Set-PnPPage -Identity $PageName -Publish
        Write-Host "Published: $PageTitle ($PageName)" -ForegroundColor Cyan
    } catch {
        Write-Error "Failed to create/update $PageName: $_"
    }
}

# --- FUNCTION: Create Grid Index Page ---
function Create-ConfluenceIndexPage {
    param([array]$PageRecords, [string]$PageName)
    $rows = ""
    foreach ($rec in $PageRecords) {
        $rows += "<tr><td>$($rec.Title)</td><td>$($rec.Created)</td><td><a href='$($rec.Url)'>Open</a></td></tr>"
    }
    $html = @"
    <style>
        table { border-collapse: collapse; width: 100%; }
        th, td { border: 1px solid #ddd; padding: 8px; }
        th { background-color: #f2f2f2; }
    </style>
    <h2>All Confluence Pages</h2>
    <table>
        <tr><th>Page Title</th><th>Created Date</th><th>Link</th></tr>
        $rows
    </table>
"@
    CreateOrUpdate-ModernPage -PageName $PageName -PageTitle "All Confluence Pages" -HtmlContent $html
}

# --- MAIN EXECUTION ---
Connect-ToSharePoint

# Upload Assets
Upload-FolderToSiteAssets "$ExportPath\images"
Upload-FolderToSiteAssets "$ExportPath\styles"
Upload-FolderToSiteAssets "$ExportPath\attachments"

# Process HTML Files
$htmlFiles = Get-ChildItem -Path $ExportPath -Filter *.html
foreach ($file in $htmlFiles) {
    $info = Clean-PageName -RawName $file.Name
    $title = $info.Title
    $name = $info.FileName
    $html = Get-Content -Path $file.FullName -Raw
    $html = Rewrite-LinksInHtml -Html $html
    CreateOrUpdate-ModernPage -PageName $name -PageTitle $title -HtmlContent $html

    $web = Get-PnPWeb
    $rel = $web.ServerRelativeUrl.TrimEnd('/')
    $AllMigratedPages += [PSCustomObject]@{
        Title = $title
        Url = "$rel/SitePages/$name.aspx"
        Created = (Get-Date -Format 'yyyy-MM-dd')
    }
}

# Generate Index Page
Create-ConfluenceIndexPage -PageRecords $AllMigratedPages -PageName $IndexPageName

Write-Host "Migration Complete! Index page created: $IndexPageName" -ForegroundColor Green

