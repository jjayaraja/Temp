# SharePoint Document Library Permission Reset Script
# Resets all custom permissions to inherit from parent library

# Configuration
$SiteUrl = "https://yourtenant.sharepoint.com/sites/yoursite"
$LibraryName = "YourDocumentLibrary"
$BatchSize = 100  # Process items in batches for better performance

# Connect to SharePoint
Write-Host "Connecting to SharePoint..." -ForegroundColor Yellow
Connect-PnPOnline -Url $SiteUrl -Interactive

try {
    # Get the document library
    Write-Host "Getting document library: $LibraryName" -ForegroundColor Yellow
    $Library = Get-PnPList -Identity $LibraryName
    
    if (!$Library) {
        throw "Library '$LibraryName' not found!"
    }

    # Get all items without problematic field queries
    Write-Host "Retrieving all items..." -ForegroundColor Yellow
    
    # Use simple CAML query to avoid field type issues
    $CAMLQuery = @"
<View Scope='RecursiveAll'>
    <Query>
        <OrderBy>
            <FieldRef Name='ID'/>
        </OrderBy>
    </Query>
    <RowLimit>$BatchSize</RowLimit>
</View>
"@

    $ItemsProcessed = 0
    $TotalResetCount = 0
    $Position = $null
    
    do {
        # Get batch of items
        if ($Position) {
            $ListItems = Get-PnPListItem -List $Library -Query $CAMLQuery -PageToken $Position.PagingInfo
        } else {
            $ListItems = Get-PnPListItem -List $Library -Query $CAMLQuery
        }
        
        $Position = $ListItems.ListItemCollectionPosition
        
        if (!$ListItems -or $ListItems.Count -eq 0) {
            break
        }
        
        Write-Host "Processing batch of $($ListItems.Count) items..." -ForegroundColor Green
        
        foreach ($Item in $ListItems) {
            try {
                # Use PnP PowerShell method to check permissions
                $HasUniquePerms = Get-PnPProperty -ClientObject $Item -Property "HasUniqueRoleAssignments" -ErrorAction SilentlyContinue
                
                if ($HasUniquePerms -eq $true) {
                    # Reset to inherit permissions using PnP method
                    Set-PnPListItemPermission -List $Library -Identity $Item.Id -InheritPermissions
                    
                    $TotalResetCount++
                    
                    # Progress indicator
                    if ($TotalResetCount % 25 -eq 0) {
                        Write-Host "Reset permissions for $TotalResetCount items..." -ForegroundColor Cyan
                    }
                }
                
                $ItemsProcessed++
                
                # Show overall progress
                if ($ItemsProcessed % 100 -eq 0) {
                    Write-Host "Processed $ItemsProcessed total items..." -ForegroundColor Yellow
                }
            }
            catch {
                Write-Warning "Failed to process item ID $($Item.Id): $($_.Exception.Message)"
                $ItemsProcessed++
            }
        }
        
    } while ($Position -ne $null)
    
    Write-Host "`nCompleted! Processed $ItemsProcessed total items." -ForegroundColor Green
    Write-Host "Reset permissions for $TotalResetCount items with unique permissions." -ForegroundColor Green
    Write-Host "All items now inherit permissions from the document library." -ForegroundColor Green
}
catch {
    Write-Error "Script failed: $($_.Exception.Message)"
}
finally {
    # Disconnect
    Disconnect-PnPOnline
    Write-Host "Disconnected from SharePoint." -ForegroundColor Yellow
}

# Alternative faster method for very large libraries (commented out)
<#
# Ultra-fast method using REST API batch requests (uncomment if needed)
function Reset-PermissionsBatch {
    param($SiteUrl, $LibraryName)
    
    Connect-PnPOnline -Url $SiteUrl -Interactive
    
    # Get all items with REST API
    $RestQuery = "_api/web/lists/getbytitle('$LibraryName')/items?`$select=Id,HasUniqueRoleAssignments&`$filter=HasUniqueRoleAssignments eq true&`$top=5000"
    
    do {
        $Items = Invoke-PnPSPRestMethod -Url $RestQuery -Method Get
        
        if ($Items.value.Count -gt 0) {
            # Create batch request
            $Batch = New-PnPBatch
            
            foreach ($Item in $Items.value) {
                $ResetUrl = "_api/web/lists/getbytitle('$LibraryName')/items($($Item.Id))/resetroleinheritance"
                Invoke-PnPSPRestMethod -Url $ResetUrl -Method Post -Batch $Batch
            }
            
            # Execute batch
            Invoke-PnPBatch -Batch $Batch
            Write-Host "Reset $($Items.value.Count) items in batch"
        }
        
        # Get next batch if available
        $RestQuery = $Items.'odata.nextLink'
        
    } while ($RestQuery)
    
    Disconnect-PnPOnline
}

# Uncomment to use the ultra-fast batch method:
# Reset-PermissionsBatch -SiteUrl $SiteUrl -LibraryName $LibraryName
#>
